# Data Transformations

```{r}
#| output: false
library(tidyverse)
library(nycflights13)
```

```{r}
glimpse(flights)
```

## 3.5.7 Groups Exercises

1. Which carrier has the worst average delays?

```{r}
flights |>
  summarize(
    average_delay_minutes = mean(arr_delay, na.rm = TRUE),
    n = n(),
    .by = "carrier"
  ) |>
  arrange(desc(average_delay_minutes)) |>
  left_join(airlines, join_by(carrier)) |>
  rename(airline = name) |>
  relocate(airline)
```

Challenge: can you disentangle the effects of bad airports vs. bad carriers?
Why/why not?

Here I've attempted to normalise delays to find their performance relative to
the airport averages. I've defined the departure airport's responsibility as
the departure delay, and the destination airport's responsibility as the
arrival delay minus the departure delay.

By taking the average of all flights and then subtracting these from the delay,
I derive a normalised delay that ignores average airport performance, hopefully
minimising airport influence on this data.

```{r}
delays_by_origin <- flights |>
  summarize(
    airport_dep_delay_minutes = mean(dep_delay, na.rm = TRUE),
    .by = "origin"
  )

delays_by_dest <- flights |>
  summarize(
    airport_arr_delay_minutes = mean(arr_delay - dep_delay, na.rm = TRUE),
    .by = "dest"
  )

flights |>
  left_join(delays_by_origin, join_by(origin)) |>
  left_join(delays_by_dest, join_by(dest)) |>
  mutate(
    normalized_arr_delay = (
      arr_delay - airport_arr_delay_minutes - airport_dep_delay_minutes
    )
  ) |>
  summarize(
    average_normalized_delay = mean(normalized_arr_delay, na.rm = TRUE),
    n = n(),
    .by = c("carrier")
  ) |>
  arrange(desc(average_normalized_delay)) |>
  left_join(airlines, join_by(carrier))
```

2. Find the flights that are most delayed upon departure from each destination.

```{r}
flights |>
  group_by(origin) |>
  slice_max(dep_delay) |>
  select(origin, dest, dep_delay, year, month, day, carrier, flight)
```

3. How do delays vary over the course of the day? Illustrate your answer with a
   plot.

```{r}
delays <- flights |>
  filter(hour >= 5 & hour < 24) |>
  summarize(
    Depature_delay = mean(dep_delay, na.rm = TRUE),
    Arrival_delay = mean(arr_delay, na.rm = TRUE),
    .by = "hour"
  ) |>
  pivot_longer(
    ends_with("delay"),
    names_to = "type",
    names_pattern = "(.*)_delay",
    values_to = "delay_minutes"
  )

delays

ggplot(
  delays,
  aes(x = hour, y = delay_minutes)
) +
  geom_line(aes(color = type)) +
  labs(
    title = "Departure and Arrival Delays by Hour",
    subtitle = "Flights from NYC, 2013, 5amâ€“11pm",
    x = "Hour",
    y = "Delay (minutes)",
    color = "Departure/Arrival",
  ) +
  scale_x_continuous(
    limits = c(5, 23),
    n.breaks = 9,
    minor_breaks = NULL,
    expand = expansion(add = 1),
    labels = function(x) {
      return(sprintf("%0.2d:00", x %% 24))
    }
  ) +
  scale_y_continuous(
    limits = c(-10, 30),
    n.breaks = 5
  )
```

